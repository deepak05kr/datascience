library(SparkR)
sparkR.session(master='local')
library(ggplot2)
parking2017<- read.df("s3://upgradkumar2018/Parking_Violations_Issued_-_Fiscal_Year_2017.csv",source = "com.databricks.spark.csv", header="true",inferSchema = "true")

#Q1 Find total number of tickets for each year.
nrow(parking2017)
#10803028

#EDA
# Ignore Output in this file verify with PDF
#Unique Rows in 2017
parking2017clean<-unique(parking2017)
nrow(parking2017clean)
#10803028
#persist data to memory
persist(parking2017clean, "MEMORY_ONLY")
dim(parking2017clean)
#10803028       43

parking2017clean<-withColumnRenamed(parking2017clean,"Summons Number","SummonsNumber")
parking2017clean<-dropDuplicates(parking2017clean,"SummonsNumber")
nrow(parking2017clean)
#10803028
#Column Rename for space between columns removal


parking2017clean<-withColumnRenamed(parking2017clean,"Violation Time","ViolationTime")
parking2017clean<-withColumnRenamed(parking2017clean,"Violation Code","ViolationCode")
parking2017clean<-withColumnRenamed(parking2017clean,"Registration State","RegistrationState")

parking2017clean<-withColumnRenamed(parking2017clean,"House Number","HouseNumber")
parking2017clean<-withColumnRenamed(parking2017clean,"Street Name","StreetName")
parking2017clean<-withColumnRenamed(parking2017clean,"Registration State","RegistrationState")
parking2017clean<-withColumnRenamed(parking2017clean,"Plate ID","PlateID")
parking2017clean<-withColumnRenamed(parking2017clean,"Plate Type","PlateType")
parking2017clean<-withColumnRenamed(parking2017clean,"Issue Date","IssueDate")
parking2017clean<-withColumnRenamed(parking2017clean,"Violation Code","ViolationCode")
parking2017clean<-withColumnRenamed(parking2017clean,"Vehicle Body Type","VehicleBodyType")
parking2017clean<-withColumnRenamed(parking2017clean,"Vehicle Make","VehicleMake")

parking2017clean<-withColumnRenamed(parking2017clean,"Issuer Precinct","IssuerPrecinct")
parking2017clean<-withColumnRenamed(parking2017clean,"Violation Precinct","ViolationPrecinct")



#Q2 Find out how many unique states the cars which got parking tickets came from.

createOrReplaceTempView(parking2017clean, "parkingcleantbl2017")
parking2017cleanstates <- SparkR::sql("SELECT distinct(RegistrationState) FROM parkingcleantbl2017 order by RegistrationState")

head(parking2017cleanstates,nrow(parking2017cleanstates))

#Q3 Some parking tickets don’t have addresses on them, which is cause for concern. Find out how many such tickets there are.


createOrReplaceTempView(parking2017clean, "parkingnoaddrtbl2017")
parking2017cleannoaddr <- SparkR::sql("SELECT count(*) FROM parkingnoaddrtbl2017 where StreetName is null")
#parking2017cleannoaddr <- SparkR::sql("SELECT count(*) FROM parkingnoaddrtbl2017 where StreetName is null or HouseNumber is null")
head(parking2017cleannoaddr)
#4009 2289944

###Aggregation Tasks

#Q1 How often does each violation code occur? (frequency of violation codes - find the top 5)

parking2017cleanvctop5<-summarize(groupBy(parking2017clean, parking2017clean$ViolationCode),count=n(parking2017clean$ViolationCode)/(365*24))

parking2017cleanvctop5sorted<-head(arrange(parking2017cleanvctop5, desc(parking2017cleanvctop5$count)),5)
parking2017cleanvctop5sorted

parking2017cleanvctop5sortedgg<-arrange(parking2017cleanvctop5, desc(parking2017cleanvctop5$count))
ggparking2017cleanvctop5sorted<-collect(select(parking2017cleanvctop5sortedgg,parking2017cleanvctop5sortedgg$ViolationCode,parking2017cleanvctop5sortedgg$count))

ggparking2017cleanvctop5sorted1<-ggparking2017cleanvctop5sorted[1:5,]
ggplot(data=ggparking2017cleanvctop5sorted1,aes(x=ViolationCode,y=count)) + geom_bar(stat='identity',width=0.8,position="dodge")+geom_text(aes(label=count))



ViolationCode     count
1            21 174.49635
2            36 159.88744
3            38 121.26758
4            14 101.99749
5            20  70.61564


#Q2 How often does each vehicle body type get a parking ticket? How about the vehicle make? (find the top 5 for both)




parking2017cleanvbtop5<-summarize(groupBy(parking2017clean, parking2017clean$VehicleBodyType),count=n(parking2017clean$VehicleBodyType)/(365*24))

parking2017cleanvbtop5sorted<-head(arrange(parking2017cleanvbtop5, desc(parking2017cleanvbtop5$count)),5)
parking2017cleanvbtop5sorted

parking2017cleanvbtop5sortedgg<-arrange(parking2017cleanvbtop5, desc(parking2017cleanvbtop5$count))
ggparking2017cleanvbtop5sorted<-collect(select(parking2017cleanvbtop5sortedgg,parking2017cleanvbtop5sortedgg$VehicleBodyType,parking2017cleanvbtop5sortedgg$count))

ggparking2017cleanvbtop5sorted1<-ggparking2017cleanvbtop5sorted[1:5,]
ggplot(data=ggparking2017cleanvbtop5sorted1,aes(x=VehicleBodyType,y=count)) + geom_bar(stat='identity',width=0.8,position="dodge")+geom_text(aes(label=count))




VehicleBodyType     count
1            SUBN 394.05970
2            4DSD 354.16781
3             VAN 183.24521
4            DELV  95.94087
5             SDN  51.82557

parking2017cleanvmtop5<-summarize(groupBy(parking2017clean, parking2017clean$VehicleMake),count=n(parking2017clean$VehicleMake)/(365*24))
head(arrange(parking2017cleanvmtop5, desc(parking2017cleanvmtop5$count)),5)

VehicleMake    count
1        FORD 161.7926
2       TOYOT 128.2561
3       HONDA 116.2156
4       NISSA  95.6129
5       CHEVR  95.4782


#Q3 A precinct is a police station that has a certain zone of the city under its command. Find the (5 highest) frequencies of:
#Violating Precincts (this is the precinct of the zone where the violation occurred)
#Issuing Precincts (this is the precinct that issued the ticket)

parking2017cleanprecinct<-summarize(groupBy(parking2017clean, parking2017clean$ViolationPrecinct),count=n(parking2017clean$ViolationPrecinct))
parking2017cleanprecinctsort<-head(arrange(parking2017cleanprecinct, desc(parking2017cleanprecinct$count)),5)
parking2017cleanprecinctsort

#ViolationPrecinct   count
#1                 0 1633006
#2                19  559716
#3                18  400887
#4                14  384596
#5                 1  307808

parking2017cleanissueprecinct<-summarize(groupBy(parking2017clean, parking2017clean$IssuerPrecinct),count=n(parking2017clean$IssuerPrecinct))
parking2017cleanissueprecinctsort<-head(arrange(parking2017cleanissueprecinct, desc(parking2017cleanissueprecinct$count)),5)
parking2017cleanissueprecinctsort

#IssuerPrecinct   count
#1              0 1834343
#2             19  544946
#3             18  391501
#4             14  369725
#5              1  298594

parking2017clean3precinct<-filter(parking2017clean,parking2017clean$IssuerPrecinct==0 | parking2017clean$IssuerPrecinct==19 | parking2017clean$IssuerPrecinct==18)
nrow(parking2017clean3precinct)

parking2017cleanprecinctvctop3<-summarize(groupBy(parking2017clean3precinct, parking2017clean3precinct$ViolationCode),count=n(parking2017clean3precinct$ViolationCode))
parking2017cleanprecinctvctop3sort<-head(arrange(parking2017cleanprecinctvctop3, desc(parking2017cleanprecinctvctop3$count)),3)
parking2017cleanprecinctvctop3sort

#ViolationCode  count
#1            36 761571
#2             7 662203
#3            21 240604

persist(parking2017clean3precinct, "MEMORY_ONLY")
nrow(parking2017clean3precinct)

parking2017clean3precinctviolation<-filter(parking2017clean,parking2017clean$ViolationPrecinct==0 | parking2017clean$ViolationPrecinct==19 | parking2017clean$ViolationPrecinct==18)
nrow(parking2017clean3precinctviolation)

parking2017clean3precinctviolationvctop3<-summarize(groupBy(parking2017clean3precinctviolation, parking2017clean3precinctviolation$ViolationCode),count=n(parking2017clean3precinctviolation$ViolationCode))
parking2017clean3precinctviolationvctop3sort<-head(arrange(parking2017clean3precinctviolationvctop3, desc(parking2017clean3precinctviolationvctop3$count)),3)
parking2017clean3precinctviolationvctop3sort

# ViolationCode  count
#1            36 761571
#2             7 662204
#3             5 195354

#Q4 Find the violation code frequency across 3 precincts which have issued the most number of tickets - do these precinct zones have an exceptionally high frequency of certain violation #codes? Are these codes common across precincts?

parking2017cleanviolationprecinctvc3<-filter(parking2017clean,parking2017clean$ViolationCode==36 | parking2017clean$ViolationCode==7 | parking2017clean$ViolationCode==5)
nrow(parking2017cleanviolationprecinctvc3)

parking2017cleanviolationprecinctvc3all<-summarize(groupBy(parking2017cleanviolationprecinctvc3, parking2017cleanviolationprecinctvc3$ViolationPrecinct),count=n(parking2017cleanviolationprecinctvc3$ViolationCode))

parking2017cleanviolationprecinctvc3allsort<-head(arrange(parking2017cleanviolationprecinctvc3all, desc(parking2017cleanviolationprecinctvc3all$count)),nrow(parking2017cleanviolationprecinctvc3all))
parking2017cleanviolationprecinctvc3allsort


#ViolationPrecinct   count
#1                  0 1619126
#2                 25       9
#3                 18       3
#4                104       3
#5                  7       2
#6                106       2
#7                 14       2
#8                 26       1
#9                 44       1
#10               122       1
#11                47       1
#12                 1       1
#13                13       1
#14                48       1
#15                41       1
#16                33       1
#17                10       1
#18                77       1
#19               102       1
#20                50       1
#21               113       1
#22               121       1
#23                75       1
#24                71       1
#25               123       1
#26               901       1
#27                66       1

#Q5 You’d want to find out the properties of parking violations across different times of the day:
#The Violation Time field is specified in a strange format. Find a way to make this into a time attribute that you can use to divide into groups.

#Find a way to deal with missing values, if any.

#Divide 24 hours into 6 equal discrete bins of time. The intervals you choose are at your discretion. For each of these groups, find the 3 most commonly occurring violations

#Now, try another direction. For the 3 most commonly occurring violation codes, find the most common times of day (in terms of the bins from the previous part)


parking2017vtbin<-mutate(parking2017clean,vhr=substr(parking2017clean$ViolationTime,1,2),ampm=substr(parking2017clean$ViolationTime,6,6))
parking2017vtbin<-mutate(parking2017vtbin,vhr24=cast(parking2017vtbin$vhr,"integer"))
parking2017vtbin$vhr24<-ifelse(parking2017vtbin$ampm=="A",parking2017vtbin$vhr24,parking2017vtbin$vhr24+12)

createOrReplaceTempView(parking2017vtbin, "parking2017vhrtbl")

bins1_2017 <- SparkR::sql("SELECT ViolationCode, vhr24, \
                   CASE  WHEN (vhr24>=0  and vhr24<4)  THEN 1\
                   WHEN (vhr24>=4  and vhr24<8) THEN 2\
                   WHEN (vhr24>=8  and vhr24<12) THEN 3\
                   WHEN (vhr24>=12  and vhr24<16) THEN 4\
 		   WHEN (vhr24>=16  and vhr24<20) THEN 5\
                   ELSE 6 END  as bin_number FROM parking2017vhrtbl")






bins1vcall2017<-summarize(groupBy(bins1_2017, bins1_2017$bin_number,bins1_2017$ViolationCode),count=n(bins1_2017$ViolationCode))

bins1vcall2017sorted<-head(arrange(bins1vcall2017, desc(bins1vcall2017$count)))
bins1vcall2017sorted

bins1vcall2017sortedgg<-arrange(bins1vcall2017, desc(bins1vcall2017$count))
ggbins1vcall2017sorted<-collect(select(bins1vcall2017sortedgg,bins1vcall2017sortedgg$bin_number,bins1vcall2017sortedgg$ViolationCode,bins1vcall2017sortedgg$count))

ggplot(data=ggbins1vcall2017sorted,aes(x=bin_number,y=count,fill=ViolationCode)) + geom_bar(stat='identity',width=0.8,position="dodge")+scale_x_continuous(breaks=seq(1,6,1))
ggplot(data=ggbins1vcall2017sorted,aes(x=ViolationCode,y=count,fill=bin_number)) + geom_bar(stat='identity',width=0.8,position="dodge")+scale_x_continuous(breaks=seq(1,100,5))


persist(bins1vcall2017, "MEMORY_ONLY")
dim(bins1vcall2017)

bins1vcallbin1_2017<-filter(bins1vcall2017,bins1vcall2017$bin_number==1)
bins1vcallbin1A_2017<-head(arrange(bins1vcallbin1_2017, desc(bins1vcallbin1_2017$count)),3)

#bin_number ViolationCode count
#1          1            21 63574
#2          1            40 36490
#3          1            78 34842

#4          1            14 26545
#5          1            85 24865

bins1vcallbin2_2017<-filter(bins1vcall2017,bins1vcall2017$bin_number==2)
bins1vcallbin2A_2017<-head(arrange(bins1vcallbin2_2017, desc(bins1vcallbin2_2017$count)),3)

#1          2            14 134458
#2          2            21 106858
#3          2            40  91344

#4          2            20  81103
#5          2            36  56550

bins1vcallbin3_2017<-filter(bins1vcall2017,bins1vcall2017$bin_number==3)
bins1vcallbin3A_2017<-head(arrange(bins1vcallbin3_2017, desc(bins1vcallbin3_2017$count)),3)

#bin_number ViolationCode   count
#1          3            21 1192163
#2          3            38  449070
#3          3            36  360365

#4          3            14  297711
#5          3            46  210978

bins1vcallbin4_2017<-filter(bins1vcall2017,bins1vcall2017$bin_number==4)
bins1vcallbin4A_2017<-head(arrange(bins1vcallbin4_2017, desc(bins1vcallbin4_2017$count)),3)

#bin_number ViolationCode  count
#1          4            38 432287
#2          4            37 324905
#3          4            36 220663

#4          4            14 211833
#5          4            20 171943

bins1vcallbin5_2017<-filter(bins1vcall2017,bins1vcall2017$bin_number==5)
bins1vcallbin5A_2017<-head(arrange(bins1vcallbin5_2017, desc(bins1vcallbin5_2017$count)),3)

#bin_number ViolationCode  count
#1          5            38 241327
#2          5            37 175802
#3          5             7 168888

#4          5            14 148538
#5          5             5  89709

bins1vcallbin6_2017<-filter(bins1vcall2017,bins1vcall2017$bin_number==6)
bins1vcallbin6A_2017<-head(arrange(bins1vcallbin6_2017, desc(bins1vcallbin6_2017$count)),3)

#bin_number ViolationCode  count
#1          6            38 198472
#2          6            21 130164
#3          6             7 124456

#4          6            37 112638
#5          6            14 105542



#38 4
#21 3
#36 2

#14 1
#40 2
#37 2


bins1vc38_2017<-filter(bins1vcall2017,bins1vcall2017$ViolationCode==38)
bins1vc38bins_2017<-head(arrange(bins1vc38_2017, desc(bins1vc38_2017$count)),3)
bins1vc38bins_2017

# bin_number ViolationCode  count
#1          3            38 449070
#2          4            38 432287
#3          5            38 241327

bins1vc21_2017<-filter(bins1vcall2017,bins1vcall2017$ViolationCode==21)
bins1vc21bins_2017<-head(arrange(bins1vc21_2017, desc(bins1vc21_2017$count)),3)
bins1vc21bins_2017

#bin_number ViolationCode   count
#1          3            21 1192163
#2          6            21  130164
#3          2            21  106858


bins1vc36<-filter(bins1vcall2017,bins1vcall2017$ViolationCode==36)
bins1vc36bins_2017<-head(arrange(bins1vc36_2017, desc(bins1vc36_2017$count)),3)
bins1vc36bins_2017

#bin_number ViolationCode  count
#1          3            36 360365
#2          4            36 220663
#3          6            36 102881

#Q6 Let’s try and find some seasonality in this data

#First, divide the year into some number of seasons, and find frequencies of tickets for each season.

#Then, find the 3 most common violations for each of these season

parking2017vidm<-mutate(parking2017clean,vidmonth=cast(substr(parking2017clean$IssueDate,1,2),"integer"))
createOrReplaceTempView(parking2017vidm, "parking2017vidseasontbl")

seasonbins_2017 <- SparkR::sql("SELECT ViolationCode, vidmonth, \
                   CASE  WHEN (vidmonth>=1  and vidmonth<4)  THEN 1\
                   WHEN (vidmonth>=4  and vidmonth<7) THEN 2\
                   WHEN (vidmonth>=7  and vidmonth<10) THEN 3\
                   WHEN (vidmonth>=10  and vidmonth<=12) THEN 4\
 		   ELSE 5 END  as seasonbin_number FROM parking2017vidseasontbl")
seasonbinsvcall_2017<-summarize(groupBy(seasonbins_2017, seasonbins_2017$seasonbin_number),count=n(seasonbins_2017$ViolationCode))
head(arrange(seasonbinsvcall_2017, desc(seasonbinsvcall_2017$count)))


seasonbinspervc_2017<-summarize(groupBy(seasonbins_2017, seasonbins_2017$seasonbin_number,seasonbins_2017$ViolationCode),count=n(seasonbins_2017$ViolationCode))
head(arrange(seasonbinspervc_2017, desc(seasonbinspervc_2017$seasonbin_number)),nrow(seasonbinspervc_2017))


seasonbinsvcall_2017<-summarize(groupBy(seasonbins_2017, seasonbins_2017$seasonbin_number),count=n(seasonbins_2017$ViolationCode))

seasonbinsvcall_2017sorted<-head(arrange(seasonbinsvcall_2017, desc(seasonbinsvcall_2017$count)))
seasonbinsvcall_2017sorted

seasonbinsvcall_2017sortedgg<-arrange(seasonbinsvcall_2017, desc(seasonbinsvcall_2017$count))
ggseasonbinsvcall_2017sorted<-collect(select(seasonbinsvcall_2017sortedgg,seasonbinsvcall_2017sortedgg$seasonbin_number,seasonbinsvcall_2017sortedgg$count))

ggplot(data=ggseasonbinsvcall_2017sorted,aes(x=seasonbin_number,y=count)) + geom_bar(stat='identity',width=0.8,position="dodge")+scale_x_continuous(breaks=seq(1,6,1))


seasonbinspervc_2017<-summarize(groupBy(seasonbins_2017, seasonbins_2017$seasonbin_number,seasonbins_2017$ViolationCode),count=n(seasonbins_2017$ViolationCode))

seasonbinspervc_2017sorted<-head(arrange(seasonbinspervc_2017, desc(seasonbinspervc_2017$seasonbin_number)),nrow(seasonbinspervc_2017))
seasonbinspervc_2017sorted

seasonbinspervc_2017sortedgg<-arrange(seasonbinspervc_2017, desc(seasonbinspervc_2017$seasonbin_number))
ggseasonbinspervc_2017sorted<-collect(select(seasonbinspervc_2017sortedgg,seasonbinspervc_2017sortedgg$seasonbin_number, seasonbinspervc_2017sortedgg$ViolationCode,seasonbinspervc_2017sortedgg$count))

ggplot(data=ggseasonbinspervc_2017sorted,aes(x=seasonbin_number,y=count,fill=ViolationCode)) + geom_bar(stat='identity',width=0.8,position="dodge")+scale_x_continuous(breaks=seq(1,6,1))
ggplot(data=ggseasonbinspervc_2017sorted,aes(x=ViolationCode,y=count,fill=seasonbin_number)) + geom_bar(stat='identity',width=0.8,position="dodge")+scale_x_continuous(breaks=seq(1,100,5))



persist(seasonbinspervc_2017, "MEMORY_ONLY")
nrow(seasonbinspervc_2017)

seasonbinsperbin1_2017<-filter(seasonbinspervc_2017,seasonbinspervc_2017$seasonbin_number==1)
seasonbinsperbin1A_2017<-head(arrange(seasonbinsperbin1_2017, desc(seasonbinsperbin1_2017$count)),3)
seasonbinsperbin1A_2017

#seasonbin_number ViolationCode  count
#1                1            38 336762
#2                1            21 281600
#3                1            14 220029

seasonbinsperbin2_2017<-filter(seasonbinspervc_2017,seasonbinspervc_2017$seasonbin_number==2)
seasonbinsperbin2A_2017<-head(arrange(seasonbinsperbin2_2017, desc(seasonbinsperbin2_2017$count)),3)
seasonbinsperbin2A_2017

#seasonbin_number ViolationCode  count
#1                2            21 471580
#2                2            38 346719
#3                2            14 262595

seasonbinsperbin3_2017<-filter(seasonbinspervc_2017,seasonbinspervc_2017$seasonbin_number==3)
seasonbinsperbin3A_2017<-head(arrange(seasonbinsperbin3_2017, desc(seasonbinsperbin3_2017$count)),3)
seasonbinsperbin3A_2017

#seasonbin_number ViolationCode  count
#1                3            21 397871
#2                3            38 348466
#3                3            14 234606

seasonbinsperbin4_2017<-filter(seasonbinspervc_2017,seasonbinspervc_2017$seasonbin_number==4)
seasonbinsperbin4A_2017<-head(arrange(seasonbinsperbin4_2017, desc(seasonbinsperbin4_2017$count)),3)
seasonbinsperbin4A_2017

#seasonbin_number ViolationCode  count
#1                4            21 350563
#2                4            38 292639
#3                4            14 207397


#Q7 The fines collected from all the parking violation constitute a revenue source for the NYC police department. Let’s take an example of estimating that for the 3 most commonly occurring #codes.
#Find total occurrences of the 3 most common violation codes
#Then, search the internet for NYC parking violation code fines. You will find a website (on the nyc.gov URL) that lists these fines. They’re divided into two categories, one for the #highest-density locations of the city, the other for the rest of the city. For simplicity, take an average of the two.
#Using this information, find the total amount collected for all of the fines. State the code which has the highest total collection.
#What can you intuitively infer from these findings?

parking2017cleanvctop5<-summarize(groupBy(parking2017clean, parking2017clean$ViolationCode),count=n(parking2017clean$ViolationCode),fine=n(parking2017clean$ViolationCode))
parking2017cleanvctop5sort<-head(arrange(parking2017cleanvctop5, desc(parking2017cleanvctop5$count)),3)

parking2017cleanvctop5sort
#  ViolationCode   count    fine
#1            21 1501614 1501614
#2            38 1324586 1324586
#3            14  924627  924627

ncol(parking2017cleanvctop5sort)
#[1] 3

#21 50
#38 50
#14 115

parking2017cleanvctop5sort[1,3]<-parking2017cleanvctop5sort[1,3]*50
parking2017cleanvctop5sort[2,3]<-parking2017cleanvctop5sort[2,3]*50
parking2017cleanvctop5sort[3,3]<-parking2017cleanvctop5sort[3,3]*115
sum(parking2017cleanvctop5sort$fine)
#[1] 247642105
parking2017cleanvctop5sort
#ViolationCode   count      fine
#1            21 1501614  75080700
#2            38 1324586  66229300
#3            14  924627 106332105

