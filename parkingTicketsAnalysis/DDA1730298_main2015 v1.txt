library(SparkR)
library(ggplot2)
sparkR.session(master='local')

parking2015<- read.df("s3://upgradkumar2018/Parking_Violations_Issued_-_Fiscal_Year_2015.csv",source = "com.databricks.spark.csv", header="true",inferSchema = "true")

#Q1 Find total number of tickets for each year.
nrow(parking2015)
#11809233

#EDA

#Unique Rows in 2015
parking2015clean<-unique(parking2015)
nrow(parking2015clean)
parking2015clean<-withColumnRenamed(parking2015clean,"Summons Number","SummonsNumber")
#10951257
#persist data to memory
persist(parking2015clean, "MEMORY_ONLY")
dim(parking2015clean)
#10951257       51
#Column Rename for space between columns removal


parking2015clean<-withColumnRenamed(parking2015clean,"Violation Time","ViolationTime")
parking2015clean<-withColumnRenamed(parking2015clean,"Violation Code","ViolationCode")
parking2015clean<-withColumnRenamed(parking2015clean,"Registration State","RegistrationState")
parking2015clean<-withColumnRenamed(parking2015clean,"Street Name","StreetName")
parking2015clean<-withColumnRenamed(parking2015clean,"Registration State","RegistrationState")
parking2015clean<-withColumnRenamed(parking2015clean,"Plate ID","PlateID")
parking2015clean<-withColumnRenamed(parking2015clean,"Plate Type","PlateType")
parking2015clean<-withColumnRenamed(parking2015clean,"Issue Date","IssueDate")
parking2015clean<-withColumnRenamed(parking2015clean,"Violation Code","ViolationCode")
parking2015clean<-withColumnRenamed(parking2015clean,"Vehicle Body Type","VehicleBodyType")
parking2015clean<-withColumnRenamed(parking2015clean,"Vehicle Make","VehicleMake")

parking2015clean<-withColumnRenamed(parking2015clean,"Issuer Precinct","IssuerPrecinct")
parking2015clean<-withColumnRenamed(parking2015clean,"Violation Precinct","ViolationPrecinct")



#Q2 Find out how many unique states the cars which got parking tickets came from.

createOrReplaceTempView(parking2015clean, "parkingcleantbl")
parking2015cleanstates <- SparkR::sql("SELECT distinct(RegistrationState) FROM parkingcleantbl order by RegistrationState")

head(parking2015cleanstates,nrow(parking2015cleanstates))

#Q3 Some parking tickets don’t have addresses on them, which is cause for concern. Find out how many such tickets there are.


createOrReplaceTempView(parking2015clean, "parkingnoaddrtbl")
parking2015cleannoaddr <- SparkR::sql("SELECT count(*) FROM parkingnoaddrtbl where StreetName is null ")
head(parking2015cleannoaddr)
#5463

###Aggregation Tasks

#Q1 How often does each violation code occur? (frequency of violation codes - find the top 5)

parking2015cleanvctop5<-summarize(groupBy(parking2015clean, parking2015clean$ViolationCode),count=n(parking2015clean$ViolationCode)/(365*24))

parking2015cleanvctop5sorted<-head(arrange(parking2015cleanvctop5, desc(parking2015cleanvctop5$count)),5)
parking2015cleanvctop5sorted

parking2015cleanvctop5sortedgg<-arrange(parking2015cleanvctop5, desc(parking2015cleanvctop5$count))
ggparking2015cleanvctop5sorted<-collect(select(parking2015cleanvctop5sortedgg,parking2015cleanvctop5sortedgg$ViolationCode,parking2015cleanvctop5sortedgg$count))

ggparking2015cleanvctop5sorted1<-ggparking2015cleanvctop5sorted[1:5,]
ggplot(data=ggparking2015cleanvctop5sorted1,aes(x=ViolationCode,y=count)) + geom_bar(stat='identity',width=0.8,position="dodge")+geom_text(aes(label=count))+labs(title="Top 5 Violations 2015")

#ViolationCode     count
#1            21 171.41712
#2            38 151.20845
#3            14 105.55103
#4            36  86.93733
#5            37  85.19155


#Q2 How often does each vehicle body type get a parking ticket? How about the vehicle make? (find the top 5 for both)

parking2015cleanvbtop5<-summarize(groupBy(parking2015clean, parking2015clean$VehicleBodyType),count=n(parking2015clean$VehicleBodyType)/(365*24))

parking2015cleanvbtop5sorted<-head(arrange(parking2015cleanvbtop5, desc(parking2015cleanvbtop5$count)),5)
parking2015cleanvbtop5sorted

parking2015cleanvbtop5sortedgg<-arrange(parking2015cleanvbtop5, desc(parking2015cleanvbtop5$count))
ggparking2015cleanvbtop5sorted<-collect(select(parking2015cleanvbtop5sortedgg,parking2015cleanvbtop5sortedgg$VehicleBodyType,parking2015cleanvbtop5sortedgg$count))

ggparking2015cleanvbtop5sorted1<-ggparking2015cleanvbtop5sorted[1:5,]
ggplot(data=ggparking2015cleanvbtop5sorted1,aes(x=VehicleBodyType,y=count)) + geom_bar(stat='identity',width=0.8,position="dodge")+geom_text(aes(label=count))+labs(title="Violations by Vehicle Body 2015")


VehicleBodyType     count
1            SUBN 394.05970
2            4DSD 354.16781
3             VAN 183.24521
4            DELV  95.94087
5             SDN  51.82557

parking2015cleanvmtop5<-summarize(groupBy(parking2015clean, parking2015clean$VehicleMake),count=n(parking2015clean$VehicleMake)/(365*24))
head(arrange(parking2015cleanvmtop5, desc(parking2015cleanvmtop5$count)),5)

VehicleMake    count
1        FORD 161.7926
2       TOYOT 128.2561
3       HONDA 116.2156
4       NISSA  95.6129
5       CHEVR  95.4782


#Q3 A precinct is a police station that has a certain zone of the city under its command. Find the (5 highest) frequencies of:
#Violating Precincts (this is the precinct of the zone where the violation occurred)
#Issuing Precincts (this is the precinct that issued the ticket)

parking2015cleanprecinct<-summarize(groupBy(parking2015clean, parking2015clean$ViolationPrecinct),count=n(parking2015clean$ViolationPrecinct))
parking2015cleanprecinctsort<-head(arrange(parking2015cleanprecinct, desc(parking2015cleanprecinct$count)),5)
parking2015cleanprecinctsort

#ViolationPrecinct   count
#1                 0 1633006
#2                19  559716
#3                18  400887
#4                14  384596
#5                 1  307808

parking2015cleanissueprecinct<-summarize(groupBy(parking2015clean, parking2015clean$IssuerPrecinct),count=n(parking2015clean$IssuerPrecinct))
parking2015cleanissueprecinctsort<-head(arrange(parking2015cleanissueprecinct, desc(parking2015cleanissueprecinct$count)),5)
parking2015cleanissueprecinctsort

#IssuerPrecinct   count
#1              0 1834343
#2             19  544946
#3             18  391501
#4             14  369725
#5              1  298594

parking2015clean3precinct<-filter(parking2015clean,parking2015clean$IssuerPrecinct==0 | parking2015clean$IssuerPrecinct==19 | parking2015clean$IssuerPrecinct==18)
nrow(parking2015clean3precinct)

parking2015cleanprecinctvctop3<-summarize(groupBy(parking2015clean3precinct, parking2015clean3precinct$ViolationCode),count=n(parking2015clean3precinct$ViolationCode))
parking2015cleanprecinctvctop3sort<-head(arrange(parking2015cleanprecinctvctop3, desc(parking2015cleanprecinctvctop3$count)),3)
parking2015cleanprecinctvctop3sort

#ViolationCode  count
#1            36 761571
#2             7 662203
#3            21 240604

persist(parking2015clean3precinct, "MEMORY_ONLY")
nrow(parking2015clean3precinct)

parking2015clean3precinctviolation<-filter(parking2015clean,parking2015clean$ViolationPrecinct==0 | parking2015clean$ViolationPrecinct==19 | parking2015clean$ViolationPrecinct==18)
nrow(parking2015clean3precinctviolation)

parking2015clean3precinctviolationvctop3<-summarize(groupBy(parking2015clean3precinctviolation, parking2015clean3precinctviolation$ViolationCode),count=n(parking2015clean3precinctviolation$ViolationCode))
parking2015clean3precinctviolationvctop3sort<-head(arrange(parking2015clean3precinctviolationvctop3, desc(parking2015clean3precinctviolationvctop3$count)),3)
parking2015clean3precinctviolationvctop3sort

# ViolationCode  count
#1            36 761571
#2             7 662204
#3             5 195354

#Q4 Find the violation code frequency across 3 precincts which have issued the most number of tickets - do these precinct zones have an exceptionally high frequency of certain violation #codes? Are these codes common across precincts?

parking2015cleanviolationprecinctvc3<-filter(parking2015clean,parking2015clean$ViolationCode==36 | parking2015clean$ViolationCode==7 | parking2015clean$ViolationCode==5)
nrow(parking2015cleanviolationprecinctvc3)

parking2015cleanviolationprecinctvc3all<-summarize(groupBy(parking2015cleanviolationprecinctvc3, parking2015cleanviolationprecinctvc3$ViolationPrecinct),count=n(parking2015cleanviolationprecinctvc3$ViolationCode))

parking2015cleanviolationprecinctvc3allsort<-head(arrange(parking2015cleanviolationprecinctvc3all, desc(parking2015cleanviolationprecinctvc3all$count)),nrow(parking2015cleanviolationprecinctvc3all))
parking2015cleanviolationprecinctvc3allsort


#ViolationPrecinct   count
#1                  0 1619126
#2                 25       9
#3                 18       3
#4                104       3
#5                  7       2
#6                106       2
#7                 14       2
#8                 26       1
#9                 44       1
#10               122       1
#11                47       1
#12                 1       1
#13                13       1
#14                48       1
#15                41       1
#16                33       1
#17                10       1
#18                77       1
#19               102       1
#20                50       1
#21               113       1
#22               121       1
#23                75       1
#24                71       1
#25               123       1
#26               901       1
#27                66       1

#Q5 You’d want to find out the properties of parking violations across different times of the day:
#The Violation Time field is specified in a strange format. Find a way to make this into a time attribute that you can use to divide into groups.

#Find a way to deal with missing values, if any.

#Divide 24 hours into 6 equal discrete bins of time. The intervals you choose are at your discretion. For each of these groups, find the 3 most commonly occurring violations

#Now, try another direction. For the 3 most commonly occurring violation codes, find the most common times of day (in terms of the bins from the previous part)


parking2015vtbin<-mutate(parking2015clean,vhr=substr(parking2015clean$ViolationTime,1,2),ampm=substr(parking2015clean$ViolationTime,6,6))
parking2015vtbin<-mutate(parking2015vtbin,vhr24=cast(parking2015vtbin$vhr,"integer"))
parking2015vtbin$vhr24<-ifelse(parking2015vtbin$ampm=="A",parking2015vtbin$vhr24,parking2015vtbin$vhr24+12)

createOrReplaceTempView(parking2015vtbin, "parking2015vhrtbl")

bins1 <- SparkR::sql("SELECT ViolationCode, vhr24, \
                   CASE  WHEN (vhr24>=0  and vhr24<4)  THEN 1\
                   WHEN (vhr24>=4  and vhr24<8) THEN 2\
                   WHEN (vhr24>=8  and vhr24<12) THEN 3\
                   WHEN (vhr24>=12  and vhr24<16) THEN 4\
 		   WHEN (vhr24>=16  and vhr24<20) THEN 5\
                   ELSE 6 END  as bin_number FROM parking2015vhrtbl")



bins1vcall<-summarize(groupBy(bins1, bins1$bin_number,bins1$ViolationCode),count=n(bins1$ViolationCode))

bins1vcallsorted<-head(arrange(bins1vcall, desc(bins1vcall$count)),nrow(bins1vcall))
bins1vcallsorted

bins1vcallsortedgg<-arrange(bins1vcall, desc(bins1vcall$count))
ggbins1vcallsorted<-collect(select(bins1vcallsortedgg,bins1vcallsortedgg$bin_number,bins1vcallsortedgg$ViolationCode,bins1vcallsortedgg$count))

ggplot(data=ggbins1vcallsorted,aes(x=bin_number,y=count,fill=ViolationCode)) + geom_bar(stat='identity',width=0.8,position="dodge")+scale_x_continuous(breaks=seq(1,6,1))
ggplot(data=ggbins1vcallsorted,aes(x=ViolationCode,y=count,fill=bin_number)) + geom_bar(stat='identity',width=0.8,position="dodge")+scale_x_continuous(breaks=seq(1,100,5))


persist(bins1vcall, "MEMORY_ONLY")
dim(bins1vcall)

bins1vcallbin1<-filter(bins1vcall,bins1vcall$bin_number==1)
bins1vcallbin1A<-head(arrange(bins1vcallbin1, desc(bins1vcallbin1$count)),3)

#bin_number ViolationCode count
#1          1            21 63574
#2          1            40 36490
#3          1            78 34842

#4          1            14 26545
#5          1            85 24865

bins1vcallbin2<-filter(bins1vcall,bins1vcall$bin_number==2)
bins1vcallbin2A<-head(arrange(bins1vcallbin2, desc(bins1vcallbin2$count)),3)

#1          2            14 134458
#2          2            21 106858
#3          2            40  91344

#4          2            20  81103
#5          2            36  56550

bins1vcallbin3<-filter(bins1vcall,bins1vcall$bin_number==3)
bins1vcallbin3A<-head(arrange(bins1vcallbin3, desc(bins1vcallbin3$count)),3)

#bin_number ViolationCode   count
#1          3            21 1192163
#2          3            38  449070
#3          3            36  360365

#4          3            14  297711
#5          3            46  210978

bins1vcallbin4<-filter(bins1vcall,bins1vcall$bin_number==4)
bins1vcallbin4A<-head(arrange(bins1vcallbin4, desc(bins1vcallbin4$count)),3)

#bin_number ViolationCode  count
#1          4            38 432287
#2          4            37 324905
#3          4            36 220663

#4          4            14 211833
#5          4            20 171943

bins1vcallbin5<-filter(bins1vcall,bins1vcall$bin_number==5)
bins1vcallbin5A<-head(arrange(bins1vcallbin5, desc(bins1vcallbin5$count)),3)

#bin_number ViolationCode  count
#1          5            38 241327
#2          5            37 175802
#3          5             7 168888

#4          5            14 148538
#5          5             5  89709

bins1vcallbin6<-filter(bins1vcall,bins1vcall$bin_number==6)
bins1vcallbin6A<-head(arrange(bins1vcallbin6, desc(bins1vcallbin6$count)),3)

#bin_number ViolationCode  count
#1          6            38 198472
#2          6            21 130164
#3          6             7 124456

#4          6            37 112638
#5          6            14 105542



#38 4
#21 3
#36 2

#14 1
#40 2
#37 2


bins1vc38<-filter(bins1vcall,bins1vcall$ViolationCode==38)
bins1vc38bins<-head(arrange(bins1vc38, desc(bins1vc38$count)),3)

# bin_number ViolationCode  count
#1          3            38 449070
#2          4            38 432287
#3          5            38 241327

bins1vc21<-filter(bins1vcall,bins1vcall$ViolationCode==21)
bins1vc21bins<-head(arrange(bins1vc21, desc(bins1vc21$count)),3)

#bin_number ViolationCode   count
#1          3            21 1192163
#2          6            21  130164
#3          2            21  106858


bins1vc36<-filter(bins1vcall,bins1vcall$ViolationCode==36)
bins1vc36bins<-head(arrange(bins1vc36, desc(bins1vc36$count)),3)
bins1vc36bins

#bin_number ViolationCode  count
#1          3            36 360365
#2          4            36 220663
#3          6            36 102881

#Q6 Let’s try and find some seasonality in this data

#First, divide the year into some number of seasons, and find frequencies of tickets for each season.

#Then, find the 3 most common violations for each of these season

parking2015vidm<-mutate(parking2015clean,vidmonth=cast(substr(parking2015clean$IssueDate,1,2),"integer"))
createOrReplaceTempView(parking2015vidm, "parking2015vidseasontbl")

seasonbins <- SparkR::sql("SELECT ViolationCode, vidmonth, \
                   CASE  WHEN (vidmonth>=1  and vidmonth<4)  THEN 1\
                   WHEN (vidmonth>=4  and vidmonth<7) THEN 2\
                   WHEN (vidmonth>=7  and vidmonth<10) THEN 3\
                   WHEN (vidmonth>=10  and vidmonth<=12) THEN 4\
 		   ELSE 5 END  as seasonbin_number FROM parking2015vidseasontbl")
seasonbinsvcall<-summarize(groupBy(seasonbins, seasonbins$seasonbin_number),count=n(seasonbins$ViolationCode))

seasonbinsvcallsorted<-head(arrange(seasonbinsvcall, desc(seasonbinsvcall$count)))
seasonbinsvcallsorted

###
seasonbinsvcallsortedgg<-arrange(seasonbinsvcall, desc(seasonbinsvcall$count))
ggseasonbinsvcallsorted<-collect(select(seasonbinsvcallsortedgg,seasonbinsvcallsortedgg$seasonbin_number,seasonbinsvcallsortedgg$count))

ggplot(data=ggseasonbinsvcallsorted,aes(x=seasonbin_number,y=count)) + geom_bar(stat='identity',width=0.8,position="dodge")+scale_x_continuous(breaks=seq(1,6,1))


seasonbinspervc<-summarize(groupBy(seasonbins, seasonbins$seasonbin_number,seasonbins$ViolationCode),count=n(seasonbins$ViolationCode))

seasonbinspervcsorted<-head(arrange(seasonbinspervc, desc(seasonbinspervc$seasonbin_number)),nrow(seasonbinspervc))
seasonbinspervcsorted

seasonbinspervcsortedgg<-arrange(seasonbinspervc, desc(seasonbinspervc$seasonbin_number))
ggseasonbinspervcsorted<-collect(select(seasonbinspervcsortedgg,seasonbinspervcsortedgg$seasonbin_number,seasonbinspervcsortedgg$ViolationCode,seasonbinspervcsortedgg$count))

ggplot(data=ggseasonbinspervcsorted,aes(x=seasonbin_number,y=count,fill=ViolationCode)) + geom_bar(stat='identity',width=0.8,position="dodge")+scale_x_continuous(breaks=seq(1,6,1))
ggplot(data=ggseasonbinspervcsorted,aes(x=ViolationCode,y=count,fill=seasonbin_number)) + geom_bar(stat='identity',width=0.8,position="dodge")+scale_x_continuous(breaks=seq(1,100,5))


persist(seasonbinspervc, "MEMORY_ONLY")
nrow(seasonbinspervc)

seasonbinsperbin1<-filter(seasonbinspervc,seasonbinspervc$seasonbin_number==1)
seasonbinsperbin1A<-head(arrange(seasonbinsperbin1, desc(seasonbinsperbin1$count)),3)
seasonbinsperbin1A

#seasonbin_number ViolationCode  count
#1                1            38 336762
#2                1            21 281600
#3                1            14 220029

seasonbinsperbin2<-filter(seasonbinspervc,seasonbinspervc$seasonbin_number==2)
seasonbinsperbin2A<-head(arrange(seasonbinsperbin2, desc(seasonbinsperbin2$count)),3)
seasonbinsperbin2A

#seasonbin_number ViolationCode  count
#1                2            21 471580
#2                2            38 346719
#3                2            14 262595

seasonbinsperbin3<-filter(seasonbinspervc,seasonbinspervc$seasonbin_number==3)
seasonbinsperbin3A<-head(arrange(seasonbinsperbin3, desc(seasonbinsperbin3$count)),3)
seasonbinsperbin3A

#seasonbin_number ViolationCode  count
#1                3            21 397871
#2                3            38 348466
#3                3            14 234606

seasonbinsperbin4<-filter(seasonbinspervc,seasonbinspervc$seasonbin_number==4)
seasonbinsperbin4A<-head(arrange(seasonbinsperbin4, desc(seasonbinsperbin4$count)),3)
seasonbinsperbin4A

#seasonbin_number ViolationCode  count
#1                4            21 350563
#2                4            38 292639
#3                4            14 207397


#Q7 The fines collected from all the parking violation constitute a revenue source for the NYC police department. Let’s take an example of estimating that for the 3 most commonly occurring #codes.
#Find total occurrences of the 3 most common violation codes
#Then, search the internet for NYC parking violation code fines. You will find a website (on the nyc.gov URL) that lists these fines. They’re divided into two categories, one for the #highest-density locations of the city, the other for the rest of the city. For simplicity, take an average of the two.
#Using this information, find the total amount collected for all of the fines. State the code which has the highest total collection.
#What can you intuitively infer from these findings?

parking2015cleanvctop5<-summarize(groupBy(parking2015clean, parking2015clean$ViolationCode),count=n(parking2015clean$ViolationCode),fine=n(parking2015clean$ViolationCode))
parking2015cleanvctop5sort<-head(arrange(parking2015cleanvctop5, desc(parking2015cleanvctop5$count)),3)

parking2015cleanvctop5sort
#  ViolationCode   count    fine
#1            21 1501614 1501614
#2            38 1324586 1324586
#3            14  924627  924627

ncol(parking2015cleanvctop5sort)
#[1] 3

#21 50
#38 50
#14 115

parking2015cleanvctop5sort[1,3]<-parking2015cleanvctop5sort[1,3]*50
parking2015cleanvctop5sort[2,3]<-parking2015cleanvctop5sort[2,3]*50
parking2015cleanvctop5sort[3,3]<-parking2015cleanvctop5sort[3,3]*115
sum(parking2015cleanvctop5sort$fine)
#[1] 247642105
parking2015cleanvctop5sort
#ViolationCode   count      fine
#1            21 1501614  75080700
#2            38 1324586  66229300
#3            14  924627 106332105

